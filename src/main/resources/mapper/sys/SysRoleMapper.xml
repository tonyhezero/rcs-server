<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geo.rcs.modules.sys.dao.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.geo.rcs.modules.sys.entity.SysRole">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="creater" property="creater" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="encode" property="encode" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, create_time, creater, description, encode, role_name, pid, status
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.geo.rcs.modules.sys.entity.SysRole">
    insert into sys_role (id, create_time, creater, 
      description, encode, role_name,
      pid, status)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{encode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR},
      #{pid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.geo.rcs.modules.sys.entity.SysRole">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="creater != null">
                creater,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="encode != null">
                encode,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creater != null">
                #{creater,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="encode != null">
                #{encode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="status != null">
            #{status,jdbcType=INTEGER},
             </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geo.rcs.modules.sys.entity.SysRole">
        update sys_role
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creater != null">
                creater = #{creater,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="encode != null">
                encode = #{encode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geo.rcs.modules.sys.entity.SysRole">
    update sys_role
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      encode = #{encode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!-- 分页查询 -->
    <select id="findByPage" resultMap="BaseResultMap" parameterType="com.geo.rcs.modules.sys.entity.SysRole">
        select t.* from  (select
        *
        from sys_role where 1=1 and user_id = #{userId} and type = 1 or user_id = 0
        ) t where 1=1
        <if test="roleName != null and roleName != ''">
            and t.role_name like '%${roleName}%'
        </if>
        <if test="encode != null and encode != ''">
            and t.encode like '%${encode}%'
        </if>
        <if test="pid != null and pid != ''">
            and t.pid = #{pid}
        </if>
        <if test="status != null">
            and t.status = #{status}
        </if>
        <if test="type != null and type != ''">
            and t.type = #{type}
        </if>
    </select>
    <select id="getRoleList" resultType="com.geo.rcs.modules.sys.entity.SysRole">
      select sr.* from sys_role sr where sr.user_id = #{userId} and sr.type = 1 or sr.user_id = 0
  </select>
    <select id="getPermissionList" resultType="com.geo.rcs.modules.sys.entity.SysMenu">
     select * from sys_menu where type = 1 and open = 1
  </select>

    <!--过期权限过滤-->
    <select id="getPermissionListNew" resultType="com.geo.rcs.modules.sys.entity.SysMenu">
        select * from sys_menu where type = 1 and open = 1 and filter_type = 0 or filter_type = 2
    </select>
    <insert id="updatePermission" parameterType="com.geo.rcs.modules.sys.entity.SysRoleMenu">
        insert into sys_role_menu
        (
        `role_id`,
        `menu_id`,
        `user_id`
        )
        values
        <foreach collection="menuIdList" item="item" index="index" separator=",">
            (
            #{roleId},
            #{item},
            #{userId}
            )
        </foreach>
    </insert>
    <insert id="saveRole" parameterType="com.geo.rcs.modules.sys.entity.SysUserRole">
        insert into sys_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="uId != null">
                u_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="uId != null">
                #{uId},
            </if>
        </trim>
    </insert>
    <delete id="deleteByUserId" parameterType="com.geo.rcs.modules.sys.entity.SysRoleMenu">
        delete from sys_role_menu where user_id =
        <if test="userId != null">
            #{userId}
        </if>
    </delete>
    <delete id="deleteByRoleId" parameterType="com.geo.rcs.modules.sys.entity.SysRoleMenu">
        delete from sys_role_menu where user_id = #{userId} and role_id = #{roleId}
    </delete>
    <select id="getPermissionById" resultType="com.geo.rcs.modules.sys.entity.SysMenu">
      select sm.* from sys_menu sm left join sys_role_menu srm on srm.menu_id = sm.id  where srm.user_id = #{id}  and srm.role_id = #{roleId} and sm.open = 1
    </select>
    <update id="updateRoleById" parameterType="com.geo.rcs.modules.sys.entity.SysRoleMenu">
        update sys_user_role set role_id = #{roleId} where u_id = #{userId}
    </update>
    <select id="queryByUserIdAndRoleId" resultType="com.geo.rcs.modules.sys.entity.SysMenu">
          select sm.* from sys_menu sm left join sys_role_menu srm on srm.menu_id = sm.id where srm.role_id = #{id} and  srm.user_id = #{userId}
    </select>
    <select id="queryRoleName" resultType="com.geo.rcs.modules.sys.entity.SysRole">
        select
        *
        from sys_role
        where role_name = #{roleName}
    </select>
</mapper>